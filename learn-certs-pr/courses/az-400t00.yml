### YamlMime:Course
title: Designing and Implementing Microsoft DevOps solutions
metadata:
  title: 'Course AZ-400T00-A: Designing and Implementing Microsoft DevOps solutions'
  description: 'Course AZ-400T00-A: Designing and Implementing Microsoft DevOps solutions'
uid: course.az-400t00
courseNumber: 'AZ-400T00-A'
hoursToComplete: 120
iconUrl: /media/learn/certification/course.svg
skillsGained:
- skill: Планирование трансформаций с общими целями и сроками
- skill: Выбор проекта и определение метрик проекта и KPI
- skill: Создание команды и гибкой организации структуры
- skill: Описание преимуществ использования контроля источников
- skill: Миграция из TFVC в Git
- skill: Scale Git для корпоративных DevOps
- skill: Рекомендации по инструментам и методам управления артефактами
- skill: Выделить общие пакеты для совместного использования и повторного использования
- skill: Миграция и консолидация артефактов
- skill: Миграция и интеграция мер контроля источников
- skill: Управление настройками приложения и секретами
- skill: Разработка стратегии обеспечения качества проекта
- skill: Планирование безопасных методов разработки и соблюдения правил
- skill: Внедрение и управление инфраструктурой сборки
- skill: Объяснение роли и значения непрерывной интеграции
- skill: Реализация непрерывной интеграции с помощью Azure DevOps
- skill: 'Управление качеством кода, включая: техническую задолженность, SonarCloud и другие инструментальные решения'
- skill: Управление политиками безопасности с открытым исходным кодом, OWASP и WhiteSource Bolt
- skill: Реализация стратегии организации контейнеров, включая различия между контейнерами и виртуальными машинами, а также использование контейнеров микросервисами.
- skill: Реализация контейнеров с помощью Docker
- skill: Проверка пакетов программного обеспечения с открытым исходным кодом на соответствие требованиям безопасности и лицензий в соответствии с корпоративными стандартами
- skill: Настройка конвейера сборки для доступа к безопасности пакета и рейтингу лицензии
- skill: Настройка безопасного доступа к фидам пакетов
- skill: Проверка кодовой базы для определения зависимостей кода, которые могут быть преобразованы в пакеты
- skill: Определение и рекомендации для стандартизированных типов пакетов и версий для всего решения
- skill: Реорганизация существующих конвейеров сборки для реализации стратегии версии, которая публикует пакеты
- skill: Управление безопасностью и соответствием
- skill: Различать релизы и развертывания
- skill: Определять компоненты конвейера релиза
- skill: Объяснять, что нужно учитывать при разработке стратегии релиза
- skill: Классифицировать релизы в сравнении с процессом релиза и кратко описывать контроль качества обоих
- skill: Описывать принцип работы Release Gate и как обращаться с примечаниями и документацией релиза
- skill: Объяснять шаблоны развертывания, как в традиционном, так и в современном смысле
- skill: Выбирать инструменты управления релизами
- skill: Объяснять терминологию, используемую в Azure DevOps и других средствах управления релизом
- skill: Описывать задачи Build and Release, что они могут сделать, и некоторые доступные задачи развертывания
- skill: Классифицировать Agent, Agent Queue и Agent Pool
- skill: Объяснять, почему иногда вам необходимо нескольких заданий на релиз в одном конвейере релиза
- skill: Различать задания на релиз с несколькими агентами и с несколькими конфигурациями
- skill: Использовать переменные релиза и переменные стадии в своем конвейере релиза
- skill: Развертывать среду безопасно, с использованием подключения службы
- skill: Внедрять тестирование в конвейер
- skill: Перечислять различные способы проверки работоспособности вашего конвейера и релиза с помощью предупреждений, сервисных хуков и отчетов
- skill: Создавать Release Gate
- skill: Описывать шаблоны развертывания
- skill: Реализация Blue Green Deployment
- skill: Реализация Canary Release
- skill: Внедрять Progressive Exposure Deployment
- skill: Настройка интеграции отчетов о сбоях для клиентских приложений
- skill: Разработка панелей мониторинга и состояния
- skill: Внедрение маршрутизации для данных отчета о сбоях для клиентских приложений
- skill: Внедрение инструментов для отслеживания использования системы, функций и потока
- skill: Интегрировать и настраивать системы тикетов с управлением работой команды разработчиков
- skill: Реализация стратегии mobile DevOps
- skill: Примять инфраструктуру и конфигурацию как принципы кода.
- skill: Развертывать и управлять инфраструктурой с использованием технологий автоматизации Microsoft, таких как шаблоны ARM, PowerShell и Azure CLI
- skill: Описывать модели и службы развертывания, доступные в Azure
- skill: Развертывать и настраивать управляемый кластер Kubernetes
- skill: Развертывать и настраивать инфраструктуру с помощью сторонних инструментов и служб с Azure, таких как Chef, Puppet, Ansible, SaltStack и Terraform
- skill: Определять инфраструктуру и стратегию конфигурации, а также соответствующий набор инструментов для конвейера релиза и инфраструктуры приложений
- skill: Реализовывать соответствие и безопасность инфраструктуры приложений
- skill: Разработка способов измерения удовлетворенности конечных пользователей
- skill: Разрабатывать процессы сбора и анализа отзывов пользователей из внешних источников
- skill: Разработка маршрутизации для данных отчета о сбоях для клиентских приложений
- skill: Рекомендации по инструментам и технологиям мониторинга
- skill: Рекомендации по инструментам для отслеживания пользования системы и функций
- skill: Анализ оповещений для определения базовых показателей
- skill: Анализ телеметрии для определения базовых показателей
- skill: Обзор сайтов в режиме реального времени и сбор отзывов пользователей о сбоях системы
- skill: Выполнение постоянной настройки для уменьшения количества бессмысленных или неактивные оповещений
learningPartnersLink: /learn/certifications/partners
locales:
- en
- ja
- zh-cn
- ko
levels:
- advanced
roles:
- devops-engineer
products:
- azure
- azure-devops
- azure-kubernetes-service
- azure-container-instances
- azure-automation
exams:
- uid: exam.az-400
summary: |-
  Этот курс позволяет приобрести знания и навыки, необходимые для разработки и реализации процессов и практик DevOps. Слушатели узнают, как планировать реализацию процессов DevOps, использовать управление исходным кодом, масштабировать Git для предприятия, консолидировать артефакты, разрабатывать стратегию управления зависимостями, управлять секретами, осуществлять непрерывную интеграцию, реализовывать стратегию построения контейнера, разрабатывать стратегию релиза, настраивать управление рабочим процессом релиза, внедрять шаблоны развертывания и оптимизировать механизмы обратной связи.

  #### Профиль аудитории
  Слушателями данного курса являются специалисты, заинтересованные в реализации процессов DevOps или в сдаче сертификационного экзамена "Microsoft Azure DevOps Solutions".
prerequisitesSection: |-
  Фундаментальные знания об Azure, управлении версиями, гибкой разработке программного обеспечения (Agile) и ключевых принципах разработки программного обеспечения. Будет полезен опыт работы в организации, разрабатывающей и поддерживающей ПО.
outlineSection: |-
  ### Модуль 1&#58; Планирование реализации процессов DevOps
  #### Уроки
  - Планирование изменений
  - Выбор проекта
  - Структуры команды
  - Миграция в Azure DevOps

  #### Лабораторная работа&#58; Agile-планирование и управление портфелями с помощью Azure Boards

  После завершения этого модуля студенты смогут следующее&#58; 
  - Планирование трансформаций с общими целями и сроками
  - Выбор проекта и определение метрик проекта и KPI
  - Создание команды и гибкой организационной структуры
  - Разработка стратегии интеграции инструментов
  - Разработка стратегии управления лицензиями (например, пользователи VSTS)
  - разработка стратегии сквозного отслеживания от рабочих элементов до рабочего программного обеспечения
  - Разработка стратегии аутентификации и доступа
  - Разработка стратегии интеграции локальных и облачных ресурсов


  ### Модуль 2&#58; Начало работы с контроля источников
  #### Уроки
  - Что такое Source Control
  - Преимущества Source Control
  - Типы систем Source Control
  - Введение в Azure Repos
  - Введение в GitHub
  - Переход с Team Foundation Version Control (TFVC) на Git в Azure Repos
  - Аутентификация в Git в Azure Repos

  #### Лабораторная работа&#58; Управление версиями с помощью Git

  После завершения этого модуля студенты смогут следующее&#58;
  - Описание преимуществ использования контроля источников 
  - Описание Azure Repos и GitHub
  - Миграция из TFVC в Git 


  ### Модуль 3&#58; Масштабирование Git для корпоративных DevOps
  #### Уроки
  - Структурирование Git Repo
  - Рабочие процессы Git Branching
  - Работа с запросами на включение кода в Azure Repos
  - Зачем нужны GitHooks?
  - Развитие внутренних источников

  #### Лабораторная работа&#58; Проверка кода с запросами на включение кода

  После завершения этого модуля студенты смогут следующее&#58;
  - Объяснение структурирования Git Repos 
  - Описание рабочих процессов Git branching
  - Использование запросов на включение кода для работы и проверки кода 
  - Использование Git hooks для автоматизации 
  - Использование Git для развития внутренних источников в организации


  ### Модуль 4&#58; Консолидация артефактов и разработка стратегии управления зависимостями 
  #### Уроки
  - Зависимость от пакетов
  - Управление пакетами
  - Миграция и консолидация артефактов

  #### Лабораторная работа&#58; Обновление пакетов

  После завершения этого модуля студенты смогут следующее&#58;
  - Рекомендации по инструментам и методам управления артефактами
  - Выделить общие пакеты для совместного использования и повторного использования
  - Миграция и консолидация артефактов
  - Миграция и интеграция мер контроля источников 


  ### Модуль 5&#58; Внедрение непрерывной интеграции с конвейерами Azure
  #### Уроки
  - Концепция конвейеров в DevOps
  - Конвейеры Azure
  - Оценка использования размещенных и частных агентов (Hosted and Private Agents)
  - Пулы агентов
  - Конвейеры и параллелизм
  - DevOps Azure и проекты с открытым исходным кодом (публичные проекты)
  - Сравнение Azure Pipelines YAML и Visual Designer
  - Обзор непрерывной интеграции
  - Реализация стратегии сборки
  - Интеграция с Azure Pipelines
  - Интеграция внешнего управления источниками с Azure Pipelines
  - Настройка частных агентов
  - Анализ и интеграция многоэтапных сборок Docker

  #### Лабораторная работа&#58; Включение непрерывной интеграции с конвейерами Azure

  #### Лабораторная работа&#58; Интеграция внешнего управления источниками с Azure Pipelines

  После завершения этого модуля студенты смогут следующее&#58;
  - Внедрение и управление инфраструктурой сборки
  - Объяснение роли и значения непрерывной интеграции
  - Реализация непрерывной интеграции с помощью Azure DevOps


  ### Модуль 6&#58; Управление конфигурацией и секретами приложения 
  #### Уроки
  - Введение в Безопасность
  - Внедрение безопасного и совместимого процесса разработки
  - Переосмысление данных конфигурации приложения
  - Управление секретами, токенами и сертификатами
  - Внедрение инструментов для управления безопасностью и соответствием в конвейере 

  #### Лабораторная работа&#58; Интеграция хранилища ключей Azure с DevOps Azure

  После завершения этого модуля студенты смогут следующее&#58;
  - Управление настройками приложения и секретами
  - Внедрение инструментов для управления безопасностью и соответствием в конвейере


  ### Модуль 7&#58; Управление качеством кода и политиками безопасности
  #### Уроки
  - Управление качеством кода
  - Управление политиками безопасности

  #### Лабораторная работа&#58; Управление техническими задолженностями с помощью Azure DevOps и SonarCloud

  После завершения этого модуля студенты смогут следующее&#58;
  - Управление качеством кода, включая&#58; техническую задолженность, SonarCloud и другие инструментальные решения
  - Управление политиками безопасности с открытым исходным кодом и OWASP


  ### Модуль 8&#58; Реализация стратегии построения контейнера
  #### Уроки
  - Реализация стратегии построения контейнера

  #### Лабораторная работа&#58; Модернизация существующих приложений ASP.NET с помощью Azure

  После завершения этого модуля студенты смогут следующее&#58;
  - Реализация стратегии организации контейнеров, включая различия между контейнерами и виртуальными машинами, а также использование контейнеров микросервисами.
  - Реализация контейнеров с помощью Docker.


  ### Модуль 9&#58; Управление версиями, безопасностью и соответствием артефактов
  #### Уроки
  - Безопасность пакета
  - Программное обеспечение с открытым исходным кодом
  - Интеграция сканирования лицензий и уязвимостей
  - Внедрение стратегии управления версиями 

  #### Лабораторная работа&#58; Управление безопасностью открытого кода и лицензией с помощью WhiteSource

  После завершения этого модуля студенты смогут следующее&#58;
  - Проверка пакетов программного обеспечения с открытым исходным кодом на соответствие требованиям безопасности и лицензий в соответствии с корпоративными стандартами
  - Настройка конвейера сборки для доступа к безопасности пакета и рейтингу лицензии
  - Настройка безопасного доступа к фидам пакетов
  - Проверка кодовой базы для определения зависимостей кода, которые могут быть преобразованы в пакеты
  - Определение и рекомендации для стандартизированных типов пакетов и версий для всего решения
  - Реорганизация существующих конвейеров сборки для реализации стратегии версии, которая публикует пакеты
  - Управление безопасностью и соответствием


  ### Модуль 10&#58; Разработка стратегии релиза
  #### Уроки
  - Введение в непрерывную доставку
  - Рекомендации по стратегии релиза
  - Разработка высококачественного конвейера релиза
  - Выбор шаблона развертывания
  - Выбор правильного инструмента управления релизами 

  После завершения этого модуля студенты смогут следующее&#58;
  - Различать релизы и развертывания
  - Определять компоненты конвейера релиза
  - Объяснять, что нужно учитывать при разработке стратегии релиза
  - Классифицировать релизы в сравнении с процессом релиза и кратко описывать контроль качества обоих
  - Описывать принцип работы Release Gate и как обращаться с примечаниями и документацией релиза
  - Объяснять шаблоны развертывания, как в традиционном, так и в современном смысле
  - Выбирать инструменты управления релизами


  ### Модуль 11&#58; Настройка рабочего процесса управления релизами
  #### Уроки
  - Создание конвейера релиза
  - Предоставление и настройка сред
  - Управление и разбиение задач и шаблонов
  - Интеграция ключей с конвейера релиза
  - Настройка автоматической интеграции и автоматизации функционального тестирования
  - Автоматизация проверки работоспособности

  #### Лабораторная работа&#58; Настройка конвейеров как код с использованием YAML

  #### Лабораторная работа&#58; Настройка ключей в конвейере с помощью Azure Key vault

  #### Лабораторная работа&#58; Настройка и запуск функциональных тестов 

  #### Лабораторная работа&#58; Использование Azure Monitor в качестве release gate

  #### Лабораторная работа&#58; Создание панели инструментов релиза

  После завершения этого модуля студенты смогут следующее&#58;
  - Объяснять терминологию, используемую в Azure DevOps и других средствах управления релизом
  - Описывать задачи Build and Release, что они могут сделать, и некоторые доступные задачи развертывания
  - Классифицировать Agent, Agent Queue и Agent Pool
  - Объяснять, почему иногда вам необходимо нескольких заданий на релиз в одном конвейере релиза
  - Различать задания на релиз с несколькими агентами и с несколькими конфигурациями
  - Использовать переменные релиза и переменные стадии в своем конвейере релиза
  - Развертывать среду безопасно, с использованием подключения службы
  - Внедрять тестирование в конвейер
  - Перечислять различные способы проверки работоспособности вашего конвейера и релиза с помощью предупреждений, сервисных хуков и отчетов
  - Создавать Release Gate


  ### Модуль 12&#58; Реализация подходящего шаблона развертывания
  #### Уроки
  - Введение в шаблоны развертывания
  - Реализация Blue Green Deployment
  - Функция Toggles
  - Канарные релизы (Canary Releases)
  - Dark Launching
  - AB тестирование
  - Progressive Exposure Deployment

  #### Лабораторная работа&#58; Управление флагами функций с помощью LaunchDarkly и Azure DevOps

  После завершения этого модуля студенты смогут следующее&#58;
  - Описывать шаблоны развертывания
  - Реализация Blue Green Deployment
  - Реализация Canary Release
  - Внедрять Progressive Exposure Deployment


  ### Модуль 13&#58; Внедрение процесса обратной связи системы с командами разработчиков
  #### Уроки
  - Внедрение инструментов для отслеживания использования системы, функций и потока
  - Внедрение маршрутизации для данных отчета о сбоях в мобильном приложении
  - Разработка панелей мониторинга и состояния
  - Интеграция и настройка системы тикетов

  #### Лабораторная работа&#58; Мониторинг производительности приложения

  После завершения этого модуля студенты смогут следующее&#58;
  - Настройка интеграции отчетов о сбоях для клиентских приложений
  - Разработка панелей мониторинга и состояния
  - Внедрение маршрутизации для данных отчета о сбоях для клиентских приложений
  - Внедрение инструментов для отслеживания использования системы, функций и потока
  - Интегрировать и настраивать системы тикетов с управлением работой команды разработчиков


  ### Модуль 14&#58; Инструменты Azure для инфраструктуры и конфигурации
  #### Уроки
  - Инфраструктура как код и управление конфигурацией
  - Создание ресурсов Azure с использованием шаблонов ARM
  - Создание ресурсов Azure с помощью интерфейса командной строки Azure
  - Создание ресурсов Azure с помощью Azure PowerShell
  - Конфигурация желаемого состояния (DSC)
  - Автоматизация Azure с помощью DevOps
  - Дополнительные инструменты автоматизации 

  #### Лабораторная работа&#58; Развертывания Azure с использованием шаблонов Resource Manager

  После завершения этого модуля студенты смогут следующее&#58;
  - Примять инфраструктуру и конфигурацию как принципы кода
  - Развертывать и управлять инфраструктурой с использованием технологий автоматизации Microsoft, таких как шаблоны ARM, PowerShell и Azure CLI


  ### Модуль 15&#58; Модели и службы развертывания Azure
  #### Уроки
  - Модели и опции развертывания
  - Службы Azure "Инфраструктура как услуга" (Infrastructure-as-a-Service, IaaS)
  - Службы Azure "Платформа как услуга" (Platform-as-a-Service, PaaS)
  - Бессерверные службы и службы HPC Computer
  - Azure Service Fabric 

  #### Лабораторная работа&#58; Развертывание приложения Dockerized Java в Azure Web App для контейнеров

  После завершения этого модуля студенты смогут следующее&#58;
  - Описывать модели и службы развертывания, доступные в Azure


  ### Модуль 16&#58; Создание и управление инфраструктурой службы Kubernetes
  #### Уроки
  - Служба Azure Kubernetes

  #### Лабораторная работа&#58; Развертывание мультиконтейнерного приложения в Azure Kubernetes Service

  После завершения этого модуля студенты смогут следующее&#58;
  - Развертывать и настраивать управляемый кластер Kubernetes


  ### Модуль 17&#58; Сторонние инфраструктуры как инструменты кода, доступные в Azure
  #### Уроки
  - Chef
  - Puppet
  - Ansible
  - Terraform

  #### Лабораторная работа&#58; Инфраструктура как код

  #### Лабораторная работа&#58; Автоматизация развертывания инфраструктуры в облаке с помощью Terraform и конвейеров Azure

  После завершения этого модуля студенты смогут следующее&#58;
  - Развертывать и настраивать инфраструктуру с помощью сторонних инструментов и служб с Azure, таких как Chef, Puppet, Ansible, и Terraform


  ### Модуль 18&#58; Реализация соответствия и безопасности в вашей инфраструктуре
  #### Уроки
  - Принципы безопасности и соответствия с DevOps
  - Центр безопасности Azure 

  #### Лабораторная работа&#58; Внедрение безопасности и соответствия требованиям в конвейере Azure DevOps

  После завершения этого модуля студенты смогут следующее&#58;
  - Определять инфраструктуру и стратегию конфигурации, а также соответствующий набор инструментов для конвейера релиза и инфраструктуры приложений
  - Реализовывать соответствие и безопасность инфраструктуры приложений


  ### Модуль 19&#58; Рекомендации и разработка механизмов обратной связи системы
  #### Уроки
  - Внутренний цикл
  - Менталитет непрерывных экспериментов
  - Разработка способов измерения удовлетворенности конечных пользователей
  - Разработка процессов для сбора и анализа отзывов пользователей
  - Разработка процесса проектирования для автоматизации аналитики приложений 

  #### Лабораторная работа&#58; Интеграция Azure DevOps и команд Teams

  После завершения этого модуля студенты смогут следующее&#58;
  - Разработка способов измерения удовлетворенности конечных пользователей
  - Разрабатывать процессы сбора и анализа отзывов пользователей из внешних источников
  - Разработка маршрутизации для данных отчета о сбоях для клиентских приложений
  - Рекомендации по инструментам и технологиям мониторинга
  - Рекомендации по инструментам для отслеживания пользования системы и функций


  ### Модуль 20&#58; Оптимизация механизмов обратной связи
  #### Уроки
  - Инжиниринг надежности сайта
  - Анализ телеметрии для определения базовых показателей
  - Выполнение постоянной настройки для уменьшения количества бессмысленных или неактивные оповещений
  - Анализ оповещений для определения базовых показателей
  - Безупречная ретроспектива и культура справедливости 

  После завершения этого модуля студенты смогут следующее&#58;
  - Анализ оповещений для определения базовых показателей
  - Анализ телеметрии для определения базовых показателей
  - Обзор сайтов в режиме реального времени и сбор отзывов пользователей о сбоях системы
  - Выполнение постоянной настройки для уменьшения количества бессмысленных или неактивные оповещений

